apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: buildah pipelineresource
    tekton.dev/pipelines.minVersion: 0.14.3
    tekton.dev/tags: buildah
  name: buildah-build-push
  labels:
    app.kubernetes.io/version: '0.1'
spec:
  description: >-
    Buildah task builds source into a container image and then pushes it to a
    container registry. Buildah Task builds source into a container image using
    Project Atomic's Buildah build tool.It uses Buildah's support for building
    from Dockerfiles, using its buildah bud command.This command executes the
    directives in the Dockerfile to assemble a container image, then pushes that
    image to a container registry.
  params:
    - default: registry.redhat.io/rhel8/buildah
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: .
      description: Path to the directory to use as context.
      name: CONTEXT
      type: string
    - default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: oci
      description: 'The format of the built container, oci or docker'
      name: FORMAT
      type: string
  resources:
    outputs:
      - name: image
        type: image
  steps:
    - command:
        - buildah
        - bud
        - '--format=$(params.FORMAT)'
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--layers'
        - '-f'
        - $(params.DOCKERFILE)
        - '-t'
        - $(resources.outputs.image.url)
        - $(params.CONTEXT)
      image: $(params.BUILDER_IMAGE)
      name: build
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: /workspace/source
    - command:
        - buildah
        - push
        - '--tls-verify=$(params.TLSVERIFY)'
        - $(resources.outputs.image.url)
        - 'docker://$(resources.outputs.image.url)'
      image: $(params.BUILDER_IMAGE)
      name: push
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: /workspace/source
  volumes:
    - emptyDir: {}
      name: varlibcontainers
